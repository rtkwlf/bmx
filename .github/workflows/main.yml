name: Build & Test
on:
  push:
    paths:
      - .github/workflows/main.yml
      - "**/*.go"
      - "**/*.bazel"
      - "WORKSPACE"
      - ".bazelrc"
      - "nogo_config.json"
      - "go.mod"
      - "go.sum"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            TARGET: linux
          - os: windows-latest
            TARGET: windows
          - os: macos-latest
            TARGET: darwin
    timeout-minutes: 5
    env:
      GO111MODULE: on
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Format
        run: if [ "$(gofmt -l `find . -name '*.go' | grep -v vendor` 2>&1)" ]; then exit 1; fi
        if: matrix.os == 'ubuntu-latest'
      - name: Build
        run: bazel build //cmd/bmx:bmx
      - name: Test
        run: bazel test //...
      - name: Package
        run: |
          bazel build //:package
          mkdir -p artifacts/
          cp bazel-bin/package* artifacts/
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: bmx-${{ matrix.TARGET }}
          path: artifacts/
  release:
      name: Create Github Release
      if: contains(github.ref, 'tags/')
      needs: [build]
      runs-on: ubuntu-latest
      steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt

      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt
  publish:
    if: contains(github.ref, 'tags/')
    needs: [build, release]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            TARGET: linux
          - os: windows-latest
            TARGET: windows
          - os: macos-latest
            TARGET: darwin
    steps:
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url
        path: /tmp/release_url

    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: bmx-${{ matrix.TARGET }}
        path: artifacts/

    - name: Package artifact for release
      run: |
        zip -v -r ../${{ matrix.TARGET }}.zip *
      working-directory: artifacts/

    - name: Get Release File Name & Upload URL
      id: get_release_info
      run: |
        echo ::set-output name=file_name::${REPOSITORY_NAME##*/}-${TAG_REF_NAME##*/v}
        value=`cat /tmp/release_url/release_url.txt`
        echo ::set-output name=upload_url::$value
      env:
        TAG_REF_NAME: ${{ github.ref }}
        REPOSITORY_NAME: ${{ github.repository }}

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./${{ matrix.TARGET }}.zip
        asset_name: ${{ steps.get_release_info.outputs.file_name }}-${{ matrix.TARGET }}.zip
        asset_content_type: application/zip